name: API

on:
  push:
    paths:
      - 'api/**'

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16

    - name: Test
      run: go test -race -v -coverprofile=coverage.txt -covermode=atomic ./...

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        files: ./api/coverage.txt

  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api

    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16

    - name: Build
      run: GOOS=linux GOARCH=amd64 go build -o bsc-fees ./cmd/bscfees

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: api-binary
        path: ./api/bsc-fees
        if-no-files-found: error

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
        version: v1.29
        working-directory: api

  deploy:
    runs-on: ubuntu-latest
    needs: [build, lint, test]
    defaults:
      run:
        working-directory: ./api
    env:
      API_ZIP_NAME: bsc-fees.zip

    steps:
    - uses: actions/checkout@v2

    - name: Download Artifact
      uses: actions/download-artifact@v2
      with:
        name: api-binary
        path: ./api

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Upload
      run: |
        ls -al
        zip ${{ env.API_ZIP_NAME }} bsc-fees config.toml
        aws s3 cp ${{ env.API_ZIP_NAME }} s3://${{ secrets.API_S3_BUCKET }}/${{ env.API_ZIP_NAME }}

    - name: Deploy
      run: aws lambda update-function-code --function-name bsc-fees --s3-bucket ${{ secrets.API_S3_BUCKET }} --s3-key ${{ env.API_ZIP_NAME }}
