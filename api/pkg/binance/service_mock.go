// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package binance is a generated GoMock package.
package binance

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockRateGetter is a mock of RateGetter interface.
type MockRateGetter struct {
	ctrl     *gomock.Controller
	recorder *MockRateGetterMockRecorder
}

// MockRateGetterMockRecorder is the mock recorder for MockRateGetter.
type MockRateGetterMockRecorder struct {
	mock *MockRateGetter
}

// NewMockRateGetter creates a new mock instance.
func NewMockRateGetter(ctrl *gomock.Controller) *MockRateGetter {
	mock := &MockRateGetter{ctrl: ctrl}
	mock.recorder = &MockRateGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRateGetter) EXPECT() *MockRateGetterMockRecorder {
	return m.recorder
}

// GetCurrencyRates mocks base method.
func (m *MockRateGetter) GetCurrencyRates(times []time.Time, symbol string) (map[time.Time]float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCurrencyRates", times, symbol)
	ret0, _ := ret[0].(map[time.Time]float64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCurrencyRates indicates an expected call of GetCurrencyRates.
func (mr *MockRateGetterMockRecorder) GetCurrencyRates(times, symbol interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCurrencyRates", reflect.TypeOf((*MockRateGetter)(nil).GetCurrencyRates), times, symbol)
}

// GetLatestCurrencyRate mocks base method.
func (m *MockRateGetter) GetLatestCurrencyRate(symbol string) (float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLatestCurrencyRate", symbol)
	ret0, _ := ret[0].(float64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLatestCurrencyRate indicates an expected call of GetLatestCurrencyRate.
func (mr *MockRateGetterMockRecorder) GetLatestCurrencyRate(symbol interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLatestCurrencyRate", reflect.TypeOf((*MockRateGetter)(nil).GetLatestCurrencyRate), symbol)
}
