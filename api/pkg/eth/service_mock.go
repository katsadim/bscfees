// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package eth is a generated GoMock package.
package eth

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTxGetter is a mock of TxGetter interface.
type MockTxGetter struct {
	ctrl     *gomock.Controller
	recorder *MockTxGetterMockRecorder
}

// MockTxGetterMockRecorder is the mock recorder for MockTxGetter.
type MockTxGetterMockRecorder struct {
	mock *MockTxGetter
}

// NewMockTxGetter creates a new mock instance.
func NewMockTxGetter(ctrl *gomock.Controller) *MockTxGetter {
	mock := &MockTxGetter{ctrl: ctrl}
	mock.recorder = &MockTxGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTxGetter) EXPECT() *MockTxGetterMockRecorder {
	return m.recorder
}

// GetAccountTransactions mocks base method.
func (m *MockTxGetter) GetAccountTransactions(account string) ([]Transaction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAccountTransactions", account)
	ret0, _ := ret[0].([]Transaction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAccountTransactions indicates an expected call of GetAccountTransactions.
func (mr *MockTxGetterMockRecorder) GetAccountTransactions(account interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAccountTransactions", reflect.TypeOf((*MockTxGetter)(nil).GetAccountTransactions), account)
}
